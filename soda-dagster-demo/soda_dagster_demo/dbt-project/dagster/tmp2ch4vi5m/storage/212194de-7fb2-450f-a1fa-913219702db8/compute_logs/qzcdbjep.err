[32m2024-08-16 11:39:39 +0200[0m - dagster - [34mDEBUG[0m - __ASSET_JOB - 212194de-7fb2-450f-a1fa-913219702db8 - 98651 - LOGS_CAPTURED - Started capturing logs in process (pid: 98651).
[32m2024-08-16 11:39:39 +0200[0m - dagster - [34mDEBUG[0m - __ASSET_JOB - 212194de-7fb2-450f-a1fa-913219702db8 - 98651 - ingestion_checks - STEP_START - Started execution of step "ingestion_checks".
[32m2024-08-16 11:39:40 +0200[0m - dagster - [34mINFO[0m - __ASSET_JOB - 212194de-7fb2-450f-a1fa-913219702db8 - ingestion_checks - Successfully loaded DataFrame for bikes/brands.csv with 9 rows.
[32m2024-08-16 11:39:40 +0200[0m - dagster - [34mINFO[0m - __ASSET_JOB - 212194de-7fb2-450f-a1fa-913219702db8 - ingestion_checks - Successfully loaded DataFrame for bikes/categories.csv with 7 rows.
[32m2024-08-16 11:39:40 +0200[0m - dagster - [34mINFO[0m - __ASSET_JOB - 212194de-7fb2-450f-a1fa-913219702db8 - ingestion_checks - Successfully loaded DataFrame for bikes/customers.csv with 1445 rows.
[32m2024-08-16 11:39:40 +0200[0m - dagster - [34mINFO[0m - __ASSET_JOB - 212194de-7fb2-450f-a1fa-913219702db8 - ingestion_checks - Successfully loaded DataFrame for bikes/order_items.csv with 4722 rows.
[32m2024-08-16 11:39:40 +0200[0m - dagster - [34mINFO[0m - __ASSET_JOB - 212194de-7fb2-450f-a1fa-913219702db8 - ingestion_checks - Successfully loaded DataFrame for bikes/orders.csv with 1615 rows.
[32m2024-08-16 11:39:40 +0200[0m - dagster - [34mINFO[0m - __ASSET_JOB - 212194de-7fb2-450f-a1fa-913219702db8 - ingestion_checks - Successfully loaded DataFrame for bikes/products.csv with 321 rows.
[32m2024-08-16 11:39:41 +0200[0m - dagster - [34mINFO[0m - __ASSET_JOB - 212194de-7fb2-450f-a1fa-913219702db8 - ingestion_checks - Successfully loaded DataFrame for bikes/staffs.csv with 10 rows.
[32m2024-08-16 11:39:41 +0200[0m - dagster - [34mINFO[0m - __ASSET_JOB - 212194de-7fb2-450f-a1fa-913219702db8 - ingestion_checks - Successfully loaded DataFrame for bikes/stocks.csv with 939 rows.
[32m2024-08-16 11:39:41 +0200[0m - dagster - [34mINFO[0m - __ASSET_JOB - 212194de-7fb2-450f-a1fa-913219702db8 - ingestion_checks - Successfully loaded DataFrame for bikes/stores.csv with 3 rows.
INFO:soda.scan:[11:39:42] By downloading and using Soda Library, you agree to Soda's Terms & Conditions (https://go.soda.io/t&c) and Privacy Policy (https://go.soda.io/privacy). 
INFO:soda.scan:[11:39:44] Sending results to Soda Cloud
INFO:soda.scan:[11:39:45] Soda Cloud Trace: 5305529512806271295
[32m2024-08-16 11:39:45 +0200[0m - dagster - [34mERROR[0m - [31m__ASSET_JOB - 212194de-7fb2-450f-a1fa-913219702db8 - 98651 - ingestion_checks - STEP_FAILURE - Execution of step "ingestion_checks" failed.

dagster._core.errors.DagsterExecutionInterruptedError

Stack Trace:
  File "/Users/hazem/Documents/Soda/GitHub/soda-dagster-demo/.venv/lib/python3.9/site-packages/dagster/_core/execution/plan/execute_plan.py", line 282, in dagster_event_sequence_for_step
    for step_event in check.generator(step_events):
  File "/Users/hazem/Documents/Soda/GitHub/soda-dagster-demo/.venv/lib/python3.9/site-packages/dagster/_core/execution/plan/execute_step.py", line 494, in core_dagster_event_sequence_for_step
    for user_event in _step_output_error_checked_user_event_sequence(
  File "/Users/hazem/Documents/Soda/GitHub/soda-dagster-demo/.venv/lib/python3.9/site-packages/dagster/_core/execution/plan/execute_step.py", line 183, in _step_output_error_checked_user_event_sequence
    for user_event in user_event_sequence:
  File "/Users/hazem/Documents/Soda/GitHub/soda-dagster-demo/.venv/lib/python3.9/site-packages/dagster/_core/execution/plan/execute_step.py", line 88, in _process_asset_results_to_events
    for user_event in user_event_sequence:
  File "/Users/hazem/Documents/Soda/GitHub/soda-dagster-demo/.venv/lib/python3.9/site-packages/dagster/_core/execution/plan/compute.py", line 198, in execute_core_compute
    for step_output in _yield_compute_results(step_context, inputs, compute_fn, compute_context):
  File "/Users/hazem/Documents/Soda/GitHub/soda-dagster-demo/.venv/lib/python3.9/site-packages/dagster/_core/execution/plan/compute.py", line 167, in _yield_compute_results
    for event in iterate_with_context(
  File "/Users/hazem/Documents/Soda/GitHub/soda-dagster-demo/.venv/lib/python3.9/site-packages/dagster/_utils/__init__.py", line 473, in iterate_with_context
    next_output = next(iterator)
  File "/Users/hazem/Documents/Soda/GitHub/soda-dagster-demo/.venv/lib/python3.9/site-packages/dagster/_core/execution/plan/compute_generator.py", line 141, in _coerce_op_compute_fn_to_iterator
    result = invoke_compute_fn(
  File "/Users/hazem/Documents/Soda/GitHub/soda-dagster-demo/.venv/lib/python3.9/site-packages/dagster/_core/execution/plan/compute_generator.py", line 129, in invoke_compute_fn
    return fn(context, **args_to_pass) if context_arg_provided else fn(**args_to_pass)
  File "/Users/hazem/Documents/Soda/GitHub/soda-dagster-demo/soda-dagster-demo/soda_dagster_demo/dbt-project/dagster/pipeline/assets.py", line 540, in ingestion_checks
    scan.execute()
  File "/Users/hazem/Documents/Soda/GitHub/soda-dagster-demo/.venv/lib/python3.9/site-packages/soda/scan.py", line 834, in execute
    invalid_checks = self.get_invalid_attributes_checks()
  File "/Users/hazem/Documents/Soda/GitHub/soda-dagster-demo/.venv/lib/python3.9/site-packages/soda/scan.py", line 617, in get_invalid_attributes_checks
    attributes_schema = self._configuration.soda_cloud.get_check_attributes_schema()
  File "/Users/hazem/Documents/Soda/GitHub/soda-dagster-demo/.venv/lib/python3.9/site-packages/soda/cloud/soda_cloud.py", line 329, in get_check_attributes_schema
    response_json_dict = self._execute_query(
  File "/Users/hazem/Documents/Soda/GitHub/soda-dagster-demo/.venv/lib/python3.9/site-packages/soda/cloud/cloud.py", line 126, in _execute_query
    _, json = self._execute_request(path="query", request_body=query, request_name=query_name) or (None, None)
  File "/Users/hazem/Documents/Soda/GitHub/soda-dagster-demo/.venv/lib/python3.9/site-packages/soda/cloud/cloud.py", line 223, in _execute_request
    response = request_method(**request_args)
  File "/Users/hazem/Documents/Soda/GitHub/soda-dagster-demo/.venv/lib/python3.9/site-packages/soda/cloud/cloud.py", line 261, in _http_post
    response = requests.post(**kwargs)
  File "/Users/hazem/Documents/Soda/GitHub/soda-dagster-demo/.venv/lib/python3.9/site-packages/requests/api.py", line 115, in post
    return request("post", url, data=data, json=json, **kwargs)
  File "/Users/hazem/Documents/Soda/GitHub/soda-dagster-demo/.venv/lib/python3.9/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
  File "/Users/hazem/Documents/Soda/GitHub/soda-dagster-demo/.venv/lib/python3.9/site-packages/requests/sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
  File "/Users/hazem/Documents/Soda/GitHub/soda-dagster-demo/.venv/lib/python3.9/site-packages/requests/sessions.py", line 703, in send
    r = adapter.send(request, **kwargs)
  File "/Users/hazem/Documents/Soda/GitHub/soda-dagster-demo/.venv/lib/python3.9/site-packages/requests/adapters.py", line 667, in send
    resp = conn.urlopen(
  File "/Users/hazem/Documents/Soda/GitHub/soda-dagster-demo/.venv/lib/python3.9/site-packages/urllib3/connectionpool.py", line 715, in urlopen
    httplib_response = self._make_request(
  File "/Users/hazem/Documents/Soda/GitHub/soda-dagster-demo/.venv/lib/python3.9/site-packages/urllib3/connectionpool.py", line 467, in _make_request
    six.raise_from(e, None)
  File "<string>", line 3, in raise_from
  File "/Users/hazem/Documents/Soda/GitHub/soda-dagster-demo/.venv/lib/python3.9/site-packages/urllib3/connectionpool.py", line 462, in _make_request
    httplib_response = conn.getresponse()
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/http/client.py", line 1349, in getresponse
    response.begin()
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/http/client.py", line 316, in begin
    version, status, reason = self._read_status()
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/http/client.py", line 277, in _read_status
    line = str(self.fp.readline(_MAXLINE + 1), "iso-8859-1")
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/socket.py", line 704, in readinto
    return self._sock.recv_into(b)
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/ssl.py", line 1241, in recv_into
    return self.read(nbytes, buffer)
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/ssl.py", line 1099, in read
    return self._sslobj.read(len, buffer)
  File "/Users/hazem/Documents/Soda/GitHub/soda-dagster-demo/.venv/lib/python3.9/site-packages/dagster/_utils/interrupts.py", line 82, in _new_signal_handler
    raise error_cls()

The above exception occurred during handling of the following exception:
TypeError: getresponse() got an unexpected keyword argument 'buffering'

Stack Trace:
  File "/Users/hazem/Documents/Soda/GitHub/soda-dagster-demo/.venv/lib/python3.9/site-packages/urllib3/connectionpool.py", line 458, in _make_request
    httplib_response = conn.getresponse(buffering=True)
[0m
